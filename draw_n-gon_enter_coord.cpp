/*******************************************************************************
# Name: draw n-gon                                                    		   #
# Purpose: draws a polygon with n sides                                		   #
#                                                                              #
# Contact: Support@eda-solutions.com                                           #
#                                                                              #
# Please use this script at your own discretion and responsbility. Eventhough  #
# This script was tested and passed the QA criteria to meet the intended       #
# specifications and behaviors upon request, the user remains the primary      #
# responsible for the sanity of the results produced by the script.            #
# The user is always advised to check the imported design and make sure the    #
# correct data is present.                                                     #
#                                                                              #
# For further support or questions, please e-mail support@eda-solutions.com    #
################################################################################
# --------------------------
# Installation:- 
# --------------------------

# --------------------------
# Usage:-
# --------------------------

# --------------------------
# Notes:
# This script is bound to the hotkey shift+2
# --------------------------

################################################################################
 * Revision History:
 * 9 Feb 2022	Generated by L-Edit
 *
 * Please note this macro is generated as an example and the user takes full 
 * responsibility in using it in the final design. 
 *******************************************************************************/
#include <cstdlib>
#include <cstdarg>
#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>

#include <string>

#define EXCLUDE_LEDIT_LEGACY_UPI

#include <ldata.h>
/* Begin -- Uncomment this block if you are using L-Comp. */
//#include <lcomp.h>
/* End */


extern "C" {
	void Draw_Ngon(void);
	int UPI_Entry_Point(void);
}

void Draw_Ngon(void)
{
	// Get current view data
	LCell	pCell	=	LCell_GetVisible();
	LFile	pFile	=	LCell_GetFile(pCell);
	LLayer pLayer = LLayer_GetCurrent(pFile); 

	LPoint pt;
	
	// Create dialog box
	LDialogItem  Dialog_Items [ 4 ] = { { "Radius", "10u" },
			{ "Vertices", "10" },
			{ "X Coord", "0.0" },
			{ "Y Coord", "0.0" }
			};

	LDialog_MultiLineInputBox ( "Geometry Properties", Dialog_Items, 4 );	
	
	// Assign values from dialog to variables
	double radius = atof(Dialog_Items[0].value); 
	int vertices = atol(Dialog_Items[1].value); 
	double xcoord = atof(Dialog_Items[2].value);
	double ycoord = atof(Dialog_Items[3].value);
	
	// Calculation for drawing polygon
	pt.x = LFile_MicronsToIntU(pFile, xcoord); 
	pt.y = LFile_MicronsToIntU(pFile, ycoord); 
	
	double angle = (2 * M_PI) / vertices;

	LObject geometry; 
	
	LPoint point_arr[255]; 
	
	// Draw polygon
	for (int n = 0; n < vertices; n++) {
			point_arr[n].x = pt.x + LFile_MicronsToIntU(pFile, radius) * sin(angle*n);
			point_arr[n].y = pt.y + LFile_MicronsToIntU(pFile, radius) * cos(angle*n);
	}
	
	geometry = LPolygon_New( pCell, pLayer, point_arr, vertices );
	LObject_SnapToMfgGrid(geometry, pFile);

	// Redraws graphical display
	LApp_TclExecute("window redraw");
}

int UPI_Entry_Point(void)
{
	LMacro_BindToMenuAndHotKey_v9_30("Tools", "Shift+2" /*hotkey*/, 
			"Draw N-gon", "Draw_Ngon", NULL /*hotkey category*/);
	return 1;
}
